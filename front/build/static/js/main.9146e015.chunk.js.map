{"version":3,"sources":["assets/avatar_loader.gif","apolloClient.ts","assets/css/colors.ts","components/UserCard/UserCard.tsx","queries/Users/userQueries.ts","components/ContentContainer/Header.tsx","components/UserDetails/UserDetails.tsx","components/ContentContainer/ContentContainer.tsx","App.tsx","components/Loader/LoaderContainer.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","getApolloClient","a","httpLink","createHttpLink","uri","cache","InMemoryCache","persistor","CachePersistor","storage","window","localStorage","getItem","restore","purge","setItem","ApolloClient","link","Container","styled","div","colors","UserInfo","span","UserImg","UserInfoArea","UserCard","user","onClick","name","age","eyeColor","company","email","picture","handler","scrollTo","top","screenTop","useEffect","objects","document","getElementsByClassName","Array","from","forEach","item","img","Image","src","dataset","onload","classList","remove","nodeName","style","backgroundImage","event","preventDefault","data-testid","id","placeholder","alt","className","data-src","USER_FRAG","gql","FIND_QUERY","Logo","SearchBar","input","AlignVertical","WipeSearch","FaWindowClose","LogoTypography","b","Header","filter","setFilter","setSelectedUser","selected","e","value","onChange","target","UserInfoWrapper","UserDetails","UserContainer","NotFoundContainer","FriendsDivider","ContentContainer","useLazyQuery","list","lazyLoading","loading","lazyData","data","lazyError","error","useQuery","queryLoading","initialData","initialError","React","useState","selectedUser","variables","friends","length","toLocaleLowerCase","includes","map","key","Date","now","App","client","width","height","hist","createBrowserHistory","ApolloProvider","history","path","component","WrapperApp","setClient","setLoading","then","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,2C,6LCmC5BC,EAvBM,uCAAG,gCAAAC,EAAA,yDAChBC,EAAWC,YAAe,CAC9BC,IANa,kCAQTC,EAAQ,IAAIC,IAEZC,EAAY,IAAIC,iBAAe,CACnCH,QACAI,QAASC,OAAOC,eAXG,MAcED,OAAOC,aAAaC,QAblB,yBAEH,gCAcdL,EAAUM,UAdI,+CAgBdN,EAAUO,QAhBI,QAiBpBJ,OAAOC,aAAaI,QAnBG,wBADJ,KAGC,iCAoBf,IAAIC,IAAa,CAAEC,KAAMf,EAAUG,WApBpB,4CAAH,qD,sBCZN,EACP,UADO,EAEJ,UAFI,EAGH,YAHG,EAIH,UAJG,EAKD,U,iBCeRa,EAAYC,IAAOC,IAAV,kbACMC,EAEAA,GAefC,EAAWH,IAAOI,KAAV,wHAMRC,EAAUL,IAAOI,KAAV,iEAIPE,EAAeN,IAAOI,KAAV,qIA2CHG,EAnCwD,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtEC,EAAiDF,EAAjDE,KAAMC,EAA2CH,EAA3CG,IAAKC,EAAsCJ,EAAtCI,SAAUC,EAA4BL,EAA5BK,QAASC,EAAmBN,EAAnBM,MAAOC,EAAYP,EAAZO,QACvCC,EAAU,SAACR,GACfjB,OAAO0B,SAAS,CAAEC,IAAK3B,OAAO4B,YAC9BV,EAAQD,IAeV,OAbAY,qBAAU,WACR,IAAMC,EAAUC,SAASC,uBAAuB,cAChDC,MAAMC,KAAKJ,GAASK,SAAQ,SAACC,GAC3B,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EAAKI,QAAQD,IACvBF,EAAII,OAAS,WAEX,OADAL,EAAKM,UAAUC,OAAO,cACG,QAAlBP,EAAKQ,SACVR,EAAKG,IAAMH,EAAKI,QAAQD,IACxBH,EAAKS,MAAMC,gBAAX,cAAoCV,EAAKI,QAAQD,IAAjD,WAGL,IAED,kBAAC/B,EAAD,CAAWU,QAAS,SAAC6B,GAA4BA,EAAMC,iBAAkBvB,EAAQR,IAASgC,cAAY,YACpG,kBAACnC,EAAD,CAASoC,GAAG,gBACV,yBAAKX,IAAKY,IAAaC,IAAI,oBAAoBC,UAAU,aAAaC,WAAU9B,KAElF,kBAACT,EAAD,KACE,kBAACH,EAAD,CAAUqC,cAAa9B,GAAvB,gBAAuCA,IACvC,kBAACP,EAAD,oBAAmBQ,IACnB,kBAACR,EAAD,0BAAyBS,IACzB,kBAACT,EAAD,wBAAuBU,IACvB,kBAACV,EAAD,sBAAqBW,O,gBCjFvBgC,EAAYC,YAAH,gKAYTC,EAAaD,YAAH,oVACZD,G,mDCbE/C,GAAYC,IAAOC,IAAV,mPACOC,GAgBhB+C,GAAOjD,IAAOC,IAAV,4PAQAC,GAKJgD,GAAYlD,IAAOmD,MAAV,uOAWTC,GAAgBpD,IAAOI,KAAV,wFAMbiD,GAAarD,YAAOsD,KAAPtD,CAAH,qMASVuD,GAAiBvD,IAAOwD,EAAV,gDA+BLC,GAvBqB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,OAASC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SACpEpD,EAAU,SAACqD,GACfA,EAAEvB,iBACFoB,EAAU,IACVC,EAAgB,OAGlB,OACE,kBAAC,GAAD,KACE,kBAACX,GAAD,CAAMxC,QAASA,GAAS,kBAAC8C,GAAD,kBACxB,kBAACH,GAAD,KACE,kBAACF,GAAD,CACEV,cAAY,YACZuB,MAAOL,EACPM,SAAU,SAACF,GAAD,OAAOH,EAAUG,EAAEG,OAAOF,QACpCrB,YAAY,YAGfmB,GAAY,kBAACR,GAAD,CAAY5C,QAASA,MCjFlCV,GAAYC,IAAOC,IAAV,8XACMC,GAmBfC,GAAWH,IAAOI,KAAV,iPAaRC,GAAUL,IAAOI,KAAV,sEAKP8D,GAAkBlE,IAAOI,KAAV,sHAuBN+D,GAhBwC,SAAC,GAAc,IAAZ3D,EAAW,EAAXA,KAChDE,EAA8BF,EAA9BE,KAAMC,EAAwBH,EAAxBG,IAAKG,EAAmBN,EAAnBM,MAAOC,EAAYP,EAAZO,QAC1B,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACGA,GAAW,yBAAKe,IAAKf,EAAS4B,IAAI,uBAErC,kBAACuB,GAAD,KACE,kBAAC,GAAD,qBAAoBxD,IACpB,kBAAC,GAAD,oBAAmBC,IACnB,kBAAC,GAAD,sBAAqBG,OC/CvBsD,GAAgBpE,IAAOC,IAAV,4MAGEC,GAOfH,GAAYC,IAAOC,IAAV,8FACMC,GAKfmE,GAAoBrE,IAAOI,KAAV,+FAMjBkE,GAAiBtE,IAAOI,KAAV,0FA8DLmE,OAxDf,WAA6B,IAAD,EAC1B,EAA0EC,aAAaxB,GAAvF,mBAAQyB,EAAR,YAAwBC,EAAxB,EAAgBC,QAA0BC,EAA1C,EAAqCC,KAAqBC,EAA1D,EAAoDC,MACpD,EAAuEC,YAAShC,GAAhEiC,EAAhB,EAAQN,QAA2BO,EAAnC,EAA8BL,KAAwBM,EAAtD,EAAgDJ,MAC1CF,GAAQD,GAAaF,GAAgBI,EAA0BI,IAAgBR,EAAeQ,EAAc,KAA1DN,EACxD,EAA8BQ,IAAMC,SAAS,IAA7C,mBAAQ3B,EAAR,KAAgBC,EAAhB,KACA,EAA0CyB,IAAMC,SAAsB,MAAtE,mBAAQC,EAAR,KAAsB1B,EAAtB,KACA,OAAGqB,EAAqB,0CACrBE,EAAqB,2DAEtB,kBAAC,GAAD,KACE,kBAAC,GAAD,CACExB,UAAW,SAACjD,GAAmB+D,EAAK,CAAEc,UAAW,CAAE7E,UAAUiD,EAAUjD,IACvEkD,gBAAiBA,EACjBC,WAAYyB,EACZ5B,OAAQA,IAER4B,GACA,kBAAC,GAAD,CAAa9E,KAAM8E,IAEpBA,GAAgBA,EAAaE,SAAWF,EAAaE,QAAQC,OAAS,GACrE,kBAACnB,GAAD,iBAICgB,EAaC,kBAAClB,GAAD,CAAe5B,cAAY,oBACvB8C,EAAaE,SACbF,EACGE,QACA9B,QAAO,SAAAlD,GAAI,uBAAIA,EAAKE,YAAT,aAAI,EAAWgF,oBAAoBC,SAASjC,EAAOgC,wBAC9DE,KAAI,SAACpF,GAAD,OACH,kBAAC,EAAD,CACEqF,IAAKrF,EAAKiC,GAAGqD,KAAKC,MAAM,SACxBvF,KAAMA,EACNC,QAAS,WAAOmD,EAAgBpD,GAAOmD,EAAU,WArB3D,kBAACS,GAAD,CAAe5B,cAAY,iBACzBqC,GACAA,EAAKJ,MACLI,EAAKJ,KAAKmB,KAAI,SAACpF,GAAD,OACZ,kBAAC,EAAD,CACEqF,IAAKrF,EAAKiC,GAAGqD,KAAKC,MAAM,OACxBvF,KAAMA,EACNC,QAAS,WAAQmD,EAAgBpD,GAAOmD,EAAU,YAmBzD2B,GAAuC,KAAnB,OAAJT,QAAI,IAAJA,GAAA,UAAAA,EAAMJ,YAAN,eAAYgB,SAAgB,kBAACpB,GAAD,wCAAoDX,K,kBC7D1FsC,GArBoD,SAAC,GAAyB,IAAvBrB,EAAsB,EAAtBA,QAASsB,EAAa,EAAbA,OAC7E,GAAItB,EACF,OACE,yBAAKvC,MAAO,CAAC8D,MAAM,OAAQC,OAAO,SAAlC,cAMJ,IAAMC,EAAOC,eACb,OACE,kBAACC,EAAA,EAAD,CAAgBL,OAAQA,GACvB,kBAAC,KAAD,CAAQM,QAASH,GAChB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOI,KAAK,IAAIC,UAAWlC,SCpBpB,SAASmC,KACtB,MAA4BrB,mBAAS,IAArC,mBAAOY,EAAP,KAAeU,EAAf,KACA,EAA8BtB,oBAAS,GAAvC,mBAAOV,EAAP,KAAgBiC,EAAhB,KAQA,OANAxF,qBAAU,WACRvC,IAAkBgI,MAAK,SAACZ,GACtBU,EAAUV,GACVW,GAAW,QAEZ,IACK,kBAAC,GAAD,CAAKX,OAAQA,EAAQtB,QAASA,ICdxC,IAAMmC,GAAcC,QACW,cAA7BxH,OAAOyH,SAASC,UACe,UAA7B1H,OAAOyH,SAASC,UAChB1H,OAAOyH,SAASC,SAASC,MACvB,2DAqCN,SAASC,GAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTP,MAAK,SAAAY,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAC1BC,QAAQC,IACN,iHAGEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAAST,KAGlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUV,WAO5BW,OAAM,SAAArD,GACLiD,QAAQjD,MAAM,4CAA6CA,MCpEjEsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFjH,SAASkH,eAAe,SDInB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAKzE,GAJkB,IAAImB,IACpBC,GACAnJ,OAAOyH,SAAS2B,MAEJC,SAAWrJ,OAAOyH,SAAS4B,OACvC,OAGFrJ,OAAOsJ,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,GAAN,sBAEP5B,KAmDV,SAAiCM,EAAeC,GAC9CyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BlC,MAAK,SAAAmC,GACJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAE5C9B,UAAUC,cAAc8B,MAAMxC,MAAK,SAAAY,GACjCA,EAAa6B,aAAazC,MAAK,WAC7BtH,OAAOyH,SAASuC,eAIpBpC,GAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvEAuB,CAAwBpC,EAAOC,GAC/BC,UAAUC,cAAc8B,MAAMxC,MAAK,WACjCmB,QAAQC,IACN,iHAKJd,GAAgBC,EAAOC,OCvB/BE,K","file":"static/js/main.9146e015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar_loader.69a722d3.gif\";","import { \n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client'\nimport { CachePersistor } from 'apollo-cache-persist'\nimport { NormalizedCacheObject } from 'apollo-cache-inmemory'\nimport { PersistentStorage, PersistedData } from 'apollo-cache-persist/types';\nconst API_HOST = 'http://localhost:4000/graphql'\nconst SCHEMA_VERSION = '1'\nconst SCHEMA_VERSION_KEY = 'apollo-schema-version'\n\nconst getApolloClient = async () => {\n  const httpLink = createHttpLink({\n    uri: API_HOST\n  });\n  const cache = new InMemoryCache()\n\n  const persistor = new CachePersistor({\n    cache,\n    storage: window.localStorage as PersistentStorage<PersistedData<NormalizedCacheObject>>,\n  } as any) //any is used here because of a conflict between cachepersistor and ApolloClient typings\n\n  const currentVersion = window.localStorage.getItem(SCHEMA_VERSION_KEY)\n\n  if (currentVersion === SCHEMA_VERSION) {\n    await persistor.restore()\n  } else {\n    await persistor.purge()\n    window.localStorage.setItem(SCHEMA_VERSION_KEY, SCHEMA_VERSION)\n  }\n\n  return new ApolloClient({ link: httpLink, cache })\n}\n\nexport default getApolloClient","export default {\n  dark: \"#00008B\",\n  primary: \"#90EE90\",\n  contrast: \"\t#32CD32\",\n  secondary:\"#00FF00\",\n  background: \"#ADFF2F\", \n};","import React, { FunctionComponent, SyntheticEvent, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport colors from \"../../assets/css/colors\";\nimport placeholder from \"../../assets/avatar_loader.gif\";\nexport interface User {\n  id: string\n  name?: string\n  age?: string\n  eyeColor?: string\n  company?: string\n  email?: string\n  picture?: string\n  friends?: [User]\n  greeting?: string \n}\n\ninterface ContainerProps {\n  onClick: (event: SyntheticEvent) => any;\n}\n\nconst Container = styled.div<ContainerProps>`\n  border:solid 1px ${colors.contrast};\n  border-radius:1em;\n  background-color:${colors.secondary};\n  box-shadow: 1px 2px #758888;\n  display:flex;\n  flex-direction:column;\n  padding:1em;\n  max-height:400px;\n  margin:auto;\n  /*width could be replaced by max/min for more fluidity of user card width, fitting more to the screensize:*/\n  /* \n    min-width: 240px; \n    max-width:400px;\n  */ \n  width:250px;\n  cursor:pointer;\n`\nconst UserInfo = styled.span`\n  width:calc(100%);\n  text-overflow:ellipsis;\n  overflow:hidden;\n  white-space: nowrap;\n`;\nconst UserImg = styled.span`\n  min-height:200px;\n  margin:auto;\n`;\nconst UserInfoArea = styled.span`\n  display:flex;\n  flex-direction:column;\n  justify-content:flex-start;\n  margin:auto;\n  width:100%;\n`;\n\nconst UserCard: FunctionComponent<{ user: User, onClick: Function }> = ({ user, onClick }) => {\n  const { name, age, eyeColor, company, email, picture } = user;\n  const handler = (user: User) => {\n    window.scrollTo({ top: window.screenTop });\n    onClick(user);\n  }\n  useEffect(() => {\n    const objects = document.getElementsByClassName('asyncImage');\n    Array.from(objects).forEach((item: any) => {\n      const img = new Image();\n      img.src = item.dataset.src;\n      img.onload = () => {\n        item.classList.remove('asyncImage');\n        return item.nodeName === 'IMG' ? \n          item.src = item.dataset.src :        \n          item.style.backgroundImage = `url(${item.dataset.src})`;\n      };\n    });\n  }, [])\n  return(\n    <Container onClick={(event: SyntheticEvent) => { event.preventDefault(); handler(user) }} data-testid=\"userCard\">\n      <UserImg id=\"imgContainer\">\n        <img src={placeholder} alt=\"avatar loading...\" className=\"asyncImage\" data-src={picture}/>\n      </UserImg>\n      <UserInfoArea>\n        <UserInfo data-testid={name}>{`Name: ${name}`}</UserInfo>\n        <UserInfo>{`Age: ${age}`}</UserInfo>\n        <UserInfo>{`Eye color: ${eyeColor}`}</UserInfo>\n        <UserInfo>{`Company: ${company}`}</UserInfo>\n        <UserInfo>{`Email: ${email}`}</UserInfo>\n      </UserInfoArea>\n    </Container>);\n}\n\n\nexport default UserCard;","\nimport { gql, useQuery, ApolloClient, NormalizedCacheObject } from '@apollo/client';\n\n//query fragment example\nconst USER_FRAG = gql`\n  fragment userFrag on User {\n    index\n    picture\n    age\n    eyeColor\n    company\n    email\n    phone\n    greeting\n  }\n`\nconst FIND_QUERY = gql`\n  ${USER_FRAG}\n  query FIND_QUERY($name:String){\n    list(name:$name) {\n      # id and name could be inside fragment, they are left here as an ilustration of fragment use with other variables\n      id\n      name\n      ...userFrag\n      friends {\n        id\n        name\n        ...userFrag\n      }\n    }\n  }\n`\nexport interface User {\n  id: string\n  index?: number\n  picture?: string\n  age?: string\n  eyeColor?: string\n  name?: string\n  company?: string\n  email?: string\n  phone?: string\n  friends?: [User]\n  greeting?: string\n}\n\nfunction useFind({ name }: { name:string }): [User] | null {\n  const { loading, error, data } = useQuery(FIND_QUERY, { variables: { name }, });\n  if (loading) return null;\n  if (error)\n    throw new Error(`Failed to fetch users with query:  ${FIND_QUERY}, and variables: ${{ name }}`);\n  return data.list;\n}\nasync function find({ client, name } : { client: ApolloClient<NormalizedCacheObject> , name:string }){\n  const { data, loading, error } = await client.query({query:FIND_QUERY, variables:{ name }});\n  if(loading) return null;\n  if(error) throw new Error(\"Failed to fetch users\");\n  return data.list;\n}\n\nexport { \n  FIND_QUERY,\n  useFind,\n  find\n}","import React, { FunctionComponent, SyntheticEvent } from 'react';\nimport styled from \"styled-components\";\nimport { FaWindowClose } from \"react-icons/fa\";\nimport  colors  from \"../../assets/css/colors\"\nconst Container = styled.div`\n  background-color: ${colors.primary};\n  display: flex;\n  justify-content: flex-start;\n  align-items:stretch;\n  height: 13%;\n  padding-top:20px;\n  padding-bottom:20px;\n  @media(max-width:450px){\n    min-width:320px;\n  }\n`;\n\ninterface OnClickProps {\n  onClick: (event: SyntheticEvent) => any;\n}\n\nconst Logo = styled.div<OnClickProps>`\n  font-size: 2em;\n  text-overflow:ellipsis;\n  white-space: nowrap;\n  display:flex;\n  align-items:center;\n  margin:0px 20px 0px 20px;\n  cursor: pointer;\n  color:${colors.dark};\n  @media(max-width:450px){\n    display:none;\n  }\n`;\nconst SearchBar = styled.input`\n  border-width: 2px;\n  border-radius: 35px;\n  padding: 0.1em 0.1em 0.1em calc(10px + 0.1em);\n  font-size:2em;\n  min-width:inherit;\n  margin:0px 25px 0px 25px;\n  &:focus {\n    outline:none;\n  };\n`;\nconst AlignVertical = styled.span`\n  display:flex;\n  align-items:center;\n  min-width:140px;\n`;\n//example of styled function used to extend existing component\nconst WipeSearch = styled(FaWindowClose)<OnClickProps>`\n  /* alternative way to verticaly align */\n  margin-top:auto;\n  margin-bottom:auto;\n  font-size:2em;\n  margin-left:-15px;\n  margin-right:10px;\n  cursor: pointer;\n`\nconst LogoTypography = styled.b`\n  font-size:1.4em;\n`;\n \nconst Header: FunctionComponent<{ \n                setFilter: Function, \n                setSelectedUser: Function, \n                selected: boolean, \n                filter: string }> = ({ filter , setFilter, setSelectedUser, selected }) => {\n  const onClick = (e: SyntheticEvent) => {\n    e.preventDefault(); \n    setFilter(\"\"); \n    setSelectedUser(null);\n  };\n\n  return(\n    <Container>\n      <Logo onClick={onClick}><LogoTypography>MySocial</LogoTypography></Logo>\n      <AlignVertical>\n        <SearchBar\n          data-testid=\"searchBar\"\n          value={filter}\n          onChange={(e) => setFilter(e.target.value)} \n          placeholder=\"Search\"\n        />\n      </AlignVertical>\n      {selected && <WipeSearch onClick={onClick}/>}\n    </Container>);\n}\n\n\nexport default Header;","import React, { FunctionComponent } from 'react';\nimport styled from \"styled-components\";\nimport colors from \"../../assets/css/colors\";\nimport { User } from \"../../queries/Users/userQueries\"\n\nconst Container = styled.div`\n  background-color:${colors.secondary};\n  padding:1em;\n  min-width:300px;\n\n  display:grid;\n  grid-gap:1em;\n  grid-template-columns: 1fr;\n\n  @media (min-width: 660px) {\n    grid-template-columns: 1fr 2fr\n  };\n  @media (min-width: 1000px) {\n    grid-template-columns: 1fr 3fr \n  };\n  @media (min-width: 1250px) {\n    grid-template-columns: 1fr 5fr \n  };\n\n`\nconst UserInfo = styled.span`\n  white-space: nowrap;\n  font-size:2em;\n  margin-left:30px;\n  text-overflow:ellipsis;\n  overflow:hidden;\n  white-space: nowrap;\n  min-width:150px;\n  @media (max-width: 450px) {\n    font-size:1.2em;\n  };\n`;\n\nconst UserImg = styled.span`\n  min-height:200px;\n  margin-left:30px;\n`;\n\nconst UserInfoWrapper = styled.span`\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  min-width:150px;\n`;\n\nconst UserDetails: FunctionComponent<{ user: User }> = ({ user }) => {\n  const { name, age, email, picture } = user;\n  return(\n    <Container>\n      <UserImg>\n        {picture && <img src={picture} alt=\"avatar loading...\"/>}\n      </UserImg>\n      <UserInfoWrapper>\n        <UserInfo>{`Name: ${name}`}</UserInfo>\n        <UserInfo>{`Age: ${age}`}</UserInfo>\n        <UserInfo>{`Email: ${email}`}</UserInfo>\n      </UserInfoWrapper>\n    </Container>\n  );\n}\n\nexport default UserDetails;","import React from 'react';\nimport UserCard from \"../../components/UserCard/UserCard\";\nimport { FIND_QUERY, User } from \"../../queries/Users/userQueries\";\nimport { useLazyQuery, useQuery } from '@apollo/client';\nimport styled from \"styled-components\";\nimport Header from './Header';\nimport UserDetails from '../UserDetails/UserDetails';\nimport colors from \"../../assets/css/colors\";\n\ninterface ContainerProps {\n  readonly size?: string;\n};\n\nconst UserContainer = styled.div<ContainerProps>`\n  padding:25px;\n  min-width:270px;\n  background-color:${colors.background};\n  margin:auto;\n  display:grid;\n  grid-gap:2em;\n  grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n`;\n\nconst Container = styled.div`\n  background-color:${colors.background};\n  min-width: 332px;\n  overflow: hidden;\n`;\n\nconst NotFoundContainer = styled.span`\n  font-size:2em;\n  margin-left:50px;\n  text-overflow: ellipsis;\n`;\n\nconst FriendsDivider = styled.span`\n  font-size:2em; \n  margin-left:20px;\n  margin-top:20px;\n`;\n\nfunction ContentContainer() {\n  const [ list, { loading:lazyLoading, data:lazyData, error:lazyError } ] = useLazyQuery(FIND_QUERY);\n  const { loading:queryLoading, data:initialData, error:initialError } = useQuery(FIND_QUERY);\n  const data = (lazyData && !lazyLoading && !lazyError) ? lazyData : ((initialData && !lazyLoading) ? initialData : null );\n  const [ filter, setFilter ] = React.useState(\"\");\n  const [ selectedUser, setSelectedUser ] = React.useState<User | null>(null);\n  if(queryLoading) return <h3>Loading...</h3>\n  if(initialError) return <h3>Ops... Something went wrong</h3>\n  return(\n    <Container>\n      <Header \n        setFilter={(name: string) => { list({ variables: { name }}); setFilter(name); }} \n        setSelectedUser={setSelectedUser} \n        selected={!!selectedUser}\n        filter={filter}\n      />\n      { selectedUser && \n        <UserDetails user={selectedUser}/>\n      }\n      {selectedUser && selectedUser.friends && selectedUser.friends.length > 0 && \n        <FriendsDivider>\n          Friends:\n        </FriendsDivider>\n      }\n      { !selectedUser ?\n          <UserContainer data-testid=\"userContainer\">\n          { data && \n            data.list && \n            data.list.map((user: User) => \n              <UserCard \n                key={user.id+Date.now()+\"user\"}\n                user={user}\n                onClick={() => { setSelectedUser(user); setFilter(\"\"); }}\n              />)\n          }\n          </UserContainer>\n        :\n          <UserContainer data-testid=\"friendsContainer\">\n            { selectedUser.friends && \n              selectedUser\n                .friends\n                .filter(user => user.name?.toLocaleLowerCase().includes(filter.toLocaleLowerCase()))\n                .map((user: User) => \n                  <UserCard \n                    key={user.id+Date.now()+\"friend\"}\n                    user={user}\n                    onClick={() =>{ setSelectedUser(user); setFilter(\"\");}}\n                  />)\n            }\n          </UserContainer>\n      }\n      {(!selectedUser && data?.list?.length === 0) &&<NotFoundContainer>No User Found With Search Term: {filter}</NotFoundContainer>}\n      \n    </Container>);\n}\n\nexport default ContentContainer;","import React, { FunctionComponent } from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport ContentContainer from \"./components/ContentContainer/ContentContainer\";\nimport {\n  Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\n\nconst App: FunctionComponent<{ loading?: boolean, client: any }> = ({ loading, client }) => {\n  if (loading) {\n    return (\n      <div style={{width:\"100%\", height:\"100%\"}}>\n        Loading...\n      </div>\n    )\n  }\n\n  const hist = createBrowserHistory();\n  return (\n    <ApolloProvider client={client}>\n     <Router history={hist}>\n      <Switch>          \n        <Route path=\"/\" component={ContentContainer} />\n      </Switch>\n    </Router>\n    </ApolloProvider>\n  )\n}\n\nexport default App;","import React, { useEffect, useState } from 'react'\nimport getApolloClient from '../../apolloClient'\nimport App from '../../App'\n\nexport default function WrapperApp() {\n  const [client, setClient] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getApolloClient().then((client) => {\n      setClient(client)\n      setLoading(false)\n    })\n  }, [])\n  return (<App client={client} loading={loading} />)\n\n}","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport LoaderContainer from \"./components/Loader/LoaderContainer\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoaderContainer/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}